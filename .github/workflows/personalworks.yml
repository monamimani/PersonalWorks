name: Personalworks

on: [push, pull_request, release]

jobs:
  # build-personalworks:  
  #   uses: ./.github/workflows/personnalworks-build.yml

  # tests-personalworks: 
  #   needs: build-personalworks 
  #   uses: ./.github/workflows/personnalworks-tests.yml

  # benchamrks-personalworks:  
  #   needs: build-personalworks 
  #   uses: ./.github/workflows/personnalworks-benchmarks.yml

  build-tools:
    runs-on: ubuntu-latest

    steps:
    - name: Foresight Collect Workflow Telemetry
      uses: runforesight/foresight-workflow-kit-action@v1
      if: ${{ always() }}
      with:
        api_key: ${{ secrets.FORESIGHT_API_KEY }}

    - uses: actions/checkout@v3  
      with:
        lfs: true
        submodules: true

    - name: Cache Tools Build
      id: cache-tools-build
      uses: actions/cache@v3
      with:
        path: Tools
        key: cache-tools-build-${{ github.run_id }}

    - name: 'Setup Go for SendToMongoDb'
      uses: actions/setup-go@v3
      with:
        check-latest: true
        go-version-file: 'Tools/UploadDataToMongoDb/go.mod'
        cache: true
        cache-dependency-path: 'Tools/UploadDataToMongoDb/go.sum'

    - name: 'Compile UploadDataToMongoDb'
      run: |
        pushd Tools/UploadDataToMongoDb/
        go version
        go build .
        popd


  updatedb_personalworks:
    runs-on: ubuntu-latest
    needs: build-tools

    # Add permissions for gcloud Authentification
    permissions:
      contents: 'read'
      id-token: 'write'

    # container:
    #   image: google/cloud-sdk:slim
    #   ports:
    #   - 27017:27017
    #   volumes:
    #   - Tools

    steps:
    - name: Foresight Collect Workflow Telemetry
      uses: runforesight/foresight-workflow-kit-action@v1
      if: ${{ always() }}
      with:
        api_key: ${{ secrets.FORESIGHT_API_KEY }}

    - name: Cache Tools Build
      id: cache-tools-build
      uses: actions/cache@v3
      with:
        path: Tools
        key: cache-tools-build-${{ github.run_id }}

    - name: 'Authenticate to Google Cloud'
      id: gcloud_auth
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: ${{secrets.GCLOUD_IAM_WORKLOAD_IDENTITY_PROVIDER}}
        service_account: personalworks-db@tonal-justice-374902.iam.gserviceaccount.com

    # - name: Cache gcloud setup
    #   id: cache-setup-gcloud
    #   uses: actions/cache@v3
    #   with:
    #     path: C:\hostedtoolcache\windows\gcloud
    #     key: ${{ runner.os }}-cache-setup-gcloud

    # - name: 'Set up gcloud SDK'
    #   if: (steps.cache-install-cache-setup-gcloud.outputs.cache-hit != 'true')
    #   uses: 'google-github-actions/setup-gcloud@v1'
    #   with:
    #     project_id: ${{steps.gcloud_auth.outputs.project_id}}

    - name: SSH Tunnel & SendToMongoDb
      run: |       
        # $(gcloud info --format="value(basic.python_location)") -m pip install numpy

        gcloud config set auth/impersonate_service_account personalworks-db@tonal-justice-374902.iam.gserviceaccount.com
        
        # gcloud info     
        # gcloud compute config-ssh --quiet --verbosity=debug

        # ssh mongodb-personalworks-servers-vm-0.us-east1-b.tonal-justice-374902 -vvv -fNT -E ssh.log -L 27017:localhost:27017


        # gcloud compute ssh ${{secrets.GCE_INSTANCE_NAME}} --quiet --zone us-east1-b --tunnel-through-iap --verbosity=debug --ssh-flag="-o ExitOnForwardFailure=yes -fNT -L 27017:localhost:27017"
        gcloud compute ssh ${{secrets.GCE_INSTANCE_NAME}} --quiet --zone us-east1-b --tunnel-through-iap --ssh-flag="-fNT -L 27017:localhost:27017"

        cd Tools/UploadDataToMongoDb/
        ./SendToMongoDb
        
        gcloud config unset auth/impersonate_service_account

  Cleanup:
    runs-on: ubuntu-latest
    # needs: [build-personalworks, tests-personalworks, benchamrks-personalworks, updatedb_personalworks]
    needs: [updatedb_personalworks]
    if: ${{ always() }}

    steps:
    - name: Foresight Collect Workflow Telemetry
      uses: runforesight/foresight-workflow-kit-action@v1
      if: ${{ always() }}
      with:
        api_key: ${{ secrets.FORESIGHT_API_KEY }}

    - uses: actions/checkout@v3 

    - name: 'Clean caches'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |        
        gh extension install actions/gh-actions-cache

        gh actions-cache delete CacheBuild --confirm

        gh actions-cache delete cache-tools-build-${{ github.run_id }} --confirm