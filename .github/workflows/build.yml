name: Build

on: 
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      buildConfig:
        required: true
        type: string
      configurePreset:
        required: true
        type: string
      buildPreset:
        required: true
        type: string
      testPreset:
        required: true
        type: string
      experimental:
        required: true
        type: boolean

jobs:
  build:
    runs-on: ${{ matrix.platform.os }}
    continue-on-error: ${{ matrix.platform.experimental }}
    name: ${{ matrix.platform.genertor }}-${{ matrix.architecture }}-${{ matrix.buildConfig.name }}

    env:
      configurePreset: ${{ matrix.platform.genertor }}
      buildConfig: ${{ matrix.buildConfig.optimization }}
      buildPreset: ${{ matrix.platform.genertor }}-${{ matrix.architecture }}-${{ matrix.buildConfig.name }}
      testPreset: ${{ matrix.platform.genertor }}-${{ matrix.architecture }}-${{ matrix.buildConfig.name }}
                          
      buildConfigBinDir: "_Out/build/${{ matrix.platform.genertor }}/_bin/${{ matrix.buildConfig.optimization }}"
      buildConfigLibDir: "_Out/build/${{ matrix.platform.genertor }}/_lib/${{ matrix.buildConfig.optimization }}"
      fullBinDir: "${{ github.workspace }}/_Out/build/${{ matrix.platform.genertor }}/_bin"

    steps:
      - name: Foresight Collect Workflow Telemetry
        uses: runforesight/foresight-workflow-kit-action@v1
        if: ${{ always() }}
        with:
          api_key: ${{ secrets.FORESIGHT_API_KEY }}

      - uses: actions/checkout@v3
        with:
          lfs: true
          submodules: true

      - name: Cache vcpkg
        id: cache-vcpkg
        uses: actions/cache@v3
        with:
          path: _Out/build/vcpkg_installed
          key: ${{ runner.os }}-${{ env.configurePreset }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}

      - name: Set environmental variables
        shell: bash
        run: |
          # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#adding-a-system-path
          echo "VCPKG_ROOT=$VCPKG_INSTALLATION_ROOT" >> $GITHUB_ENV

      - name: Install Linux packages
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install gcc-11 g++-11
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 110 --slave /usr/bin/g++ g++ /usr/bin/g++-11
          sudo apt-get install ninja-build

      - name: Cmake Configure
        run: |
          cmake --preset ${{ env.configurePreset }}

      - name: Cmake Build
        if: runner.os == 'Windows'
        run: |
          cmake --build --preset ${{ env.buildPreset }}

      - name: Cache Build
        id: cache-build
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.buildConfigBinDir }}
            OpenCppCoverage.config.txt
          key: CacheBuild-${{ github.run_id }}-${{ runner.os }}-${{ env.configurePreset }}-${{ env.buildConfig }}

      - name: Upload Build Artifacts ${{ matrix.config.buildConfig }}
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{github.workflow}}-${{ env.configurePreset }}-Build-${{github.run_number}}
          path: |
            _Out/build/${{ env.configurePreset }}/_bin/${{ env.buildConfig }}
            _Out/build/${{ env.configurePreset }}/_lib/${{ env.buildConfig }}
