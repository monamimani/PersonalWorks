name: PersonalWorks Tests

on: workflow_call

jobs:
  tests-personalwork:
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            os: windows-latest,
            buildConfig: debug,
            configurePreset: windows-vs2022,
            buildPreset: windows-vs2022-x64-debug,
            testPreset: windows-vs2022-x64-debug,
            experimental: false
          }
        - {
            os: windows-latest,
            buildConfig: relWithDebInfo,
            configurePreset: windows-vs2022,
            buildPreset: windows-vs2022-x64-release,
            testPreset: windows-vs2022-x64-release,
            experimental: false
          }
        - {
            os: windows-latest,
            buildConfig: release,
            configurePreset: windows-vs2022,
            buildPreset: windows-vs2022-x64-shipping,
            testPreset: windows-vs2022-x64-shipping,
            experimental: false
          }
        - {
            os: ubuntu-latest,
            buildConfig: debug,
            configurePreset: linux-ninja-multi-config,
            buildPreset: linux-ninja-multi-config-x64-debug,
            testPreset: linux-ninja-multi-config-x64-debug,
            experimental: true
          }
        - {
            os: ubuntu-latest,
            buildConfig: relWithDebInfo,
            configurePreset: linux-ninja-multi-config,
            buildPreset: linux-ninja-multi-config-x64-release,
            testPreset: linux-ninja-multi-config-x64-release,
            experimental: true
          }
        - {
            os: ubuntu-latest,
            buildConfig: release,
            configurePreset: linux-ninja-multi-config,
            buildPreset: linux-ninja-multi-config-x64-shipping,
            testPreset: linux-ninja-multi-config-x64-shipping,
            experimental: true
          }

    runs-on: ${{ matrix.config.os }}
    continue-on-error: ${{ matrix.config.experimental }}
    name: ${{ matrix.config.buildPreset }}

    env:
      buildConfigBinDir: "_Out/build/${{ matrix.config.configurePreset }}/_bin/${{ matrix.config.buildConfig }}"
      fullBinDir: "${{ github.workspace }}/_Out/build/${{ matrix.config.configurePreset }}/_bin"
      libDir: "_Out/build/${{ matrix.config.configurePreset }}/_lib"

    steps:
      - name: Foresight Collect Workflow Telemetry
        uses: runforesight/foresight-workflow-kit-action@v1
        if: ${{ always() }}
        with:
          api_key: ${{ secrets.FORESIGHT_API_KEY }}

      - name: Cache Build
        id: cache-build
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.buildConfigBinDir }}
            OpenCppCoverage.config.txt
          key: CacheBuild-${{ github.run_id }}-${{ runner.os }}-${{ matrix.config.configurePreset }}-${{ matrix.config.buildConfig }}

      - name: Install Linux packages
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install gcc-11 g++-11
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 110 --slave /usr/bin/g++ g++ /usr/bin/g++-11 --slave /usr/bin/gcov gcov /usr/bin/gcov-11
          sudo apt-get install ninja-build

      - name: Cache Windows packages
        if: runner.os == 'Windows'
        id: cache-install-opencppcoverage
        uses: actions/cache@v3
        with:
          path: C:\Program Files\OpenCppCoverage
          key: ${{ runner.os }}-cache-install-opencppcoverage
          
      - name: Install Windows packages
        if: (runner.os == 'Windows') && (steps.cache-install-opencppcoverage.outputs.cache-hit != 'true')
        shell: pwsh
        run: |
          choco install opencppcoverage

      - name: Set environmental variables
        shell: bash
        run: |
          # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#adding-a-system-path
          echo "VCPKG_ROOT=$VCPKG_INSTALLATION_ROOT" >> $GITHUB_ENV
          echo "C:\Program Files\OpenCppCoverage" >> $GITHUB_PATH

      - name: Run Google test (Windows)
        if: runner.os == 'Windows'
        run: |
          $buildConfigBinDir = "${{ env.buildConfigBinDir }}"
          Get-ChildItem -Recurse -Force
          
          $testExe = (Get-ChildItem -Path $buildConfigBinDir -Recurse | Where-Object Name -like *tests*.exe).FullName
          foreach ($exe in $testExe) {
            Write-Host($exe)
            $exeName = Get-ChildItem $exe | Select-Object -ExpandProperty BaseName
            Write-Host($exeName)
            &$exe --gtest_output=xml:$buildConfigBinDir/
          }
          #| Where-Object { $_.Filename -match 'tests' }
          #| Where-Object { $_.DirectoryName -match 'Release' }

      - name: Run Google test (Linux)
        if: runner.os == 'Linux'
        run: |
          ctest --preset ${{ matrix.config.testPreset }} --show-only

      - name: OpenCppCoverage
        run: |
          $buildConfigDir = Resolve-Path -Path "${{ env.buildConfigBinDir }}"
          OpenCppCoverage --config_file=OpenCppCoverage.config.txt --modules=$buildConfigDir --excluded_sources="*\vcpkg_installed" --excluded_sources="Projects\TestUtilities\*" --excluded_sources="Projects\*.test*"  --export_type=cobertura:coverage.xml -- $buildConfigDir/CoreTests.exe --gtest_brief=1

      - name: Foresight Upload Test/Coverage Results
        uses: runforesight/foresight-test-kit-action@v1
        if: ${{ always() }}
        with:
          api_key: ${{ secrets.FORESIGHT_API_KEY }}
          test_framework: JUNIT
          test_format: JUNIT
          test_path: ${{ env.buildConfigBinDir }}/*.xml
          coverage_format: COBERTURA/XML
          coverage_path: ./coverage.xml
          tags: | 
            os:${{ runner.os }}
            buildConfig:${{ matrix.config.buildConfig }}

      - name: Codecov
        uses: codecov/codecov-action@v3.1.1
        with:
          flags: ${{ runner.os }}-${{ matrix.config.buildConfig }}
          name: ${{github.repository}}
          files: ./coverage.xml

      - name: Upload Artifact Test Results ${{ matrix.config.buildConfig }}
        uses: actions/upload-artifact@v3
        with:
          name: PersonalWorks_${{github.workflow}}-${{github.job}}-${{ matrix.config.buildConfig }}_TestsResults
          path: |
            ${{ env.buildConfigBinDir }}/*.xml